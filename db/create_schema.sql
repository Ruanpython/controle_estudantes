-- Tabela ESTUDANTE
CREATE TABLE ESTUDANTE (
    ID_ESTUDANTE NUMBER PRIMARY KEY,
    NOME VARCHAR2(200) NOT NULL,
    MATRICULA VARCHAR2(50) UNIQUE NOT NULL,
    EMAIL VARCHAR2(150)
);

CREATE SEQUENCE SEQ_ESTUDANTE START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE OR REPLACE TRIGGER TRG_ESTUDANTE_BI
BEFORE INSERT ON ESTUDANTE
FOR EACH ROW
WHEN (NEW.ID_ESTUDANTE IS NULL)
BEGIN
    SELECT SEQ_ESTUDANTE.NEXTVAL INTO :NEW.ID_ESTUDANTE FROM DUAL;
END;
/

-- Tabela CURSO
CREATE TABLE CURSO (
    ID_CURSO NUMBER PRIMARY KEY,
    NOME VARCHAR2(200) NOT NULL,
    CARGA_HORARIA NUMBER
);

CREATE SEQUENCE SEQ_CURSO START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE OR REPLACE TRIGGER TRG_CURSO_BI
BEFORE INSERT ON CURSO
FOR EACH ROW
WHEN (NEW.ID_CURSO IS NULL)
BEGIN
    SELECT SEQ_CURSO.NEXTVAL INTO :NEW.ID_CURSO FROM DUAL;
END;
/

-- Tabela NOTA
CREATE TABLE NOTA (
    ID_NOTA NUMBER PRIMARY KEY,
    ID_ESTUDANTE NUMBER REFERENCES ESTUDANTE(ID_ESTUDANTE) ON DELETE CASCADE,
    ID_CURSO NUMBER REFERENCES CURSO(ID_CURSO) ON DELETE CASCADE,
    NOTA1 NUMBER(5,2),
    NOTA2 NUMBER(5,2),
    MEDIA NUMBER(5,2)
);

CREATE SEQUENCE SEQ_NOTA START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE;
CREATE OR REPLACE TRIGGER TRG_NOTA_BI
BEFORE INSERT ON NOTA
FOR EACH ROW
WHEN (NEW.ID_NOTA IS NULL)
BEGIN
    SELECT SEQ_NOTA.NEXTVAL INTO :NEW.ID_NOTA FROM DUAL;
END;
/

-- √çndices e constraints adicionais (opcional)
CREATE UNIQUE INDEX UX_ESTUDANTE_MATRICULA ON ESTUDANTE(MATRICULA);
